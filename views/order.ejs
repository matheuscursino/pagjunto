<!DOCTYPE html>
<html lang="pt-BR" data-theme="light">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pagamento Seguro - Pagjunto</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="manifest" href="/site.webmanifest">
    <script src="<%=process.env.API_SITE_URL_BASE%>/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.2/dist/confetti.browser.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <style>
        :root {
            --ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
        }
        /* --- Temas (Light/Dark) --- */
        html[data-theme='light'] {
            --bg-primary: #f0f2f5;
            --bg-secondary: #ffffff;
            --bg-tertiary: #e9ecef;
            --bg-glow: radial-gradient(circle at 50% 0%, rgba(74, 108, 255, 0.15) 0%, rgba(74, 108, 255, 0) 50%);
            --text-primary: #1c1c1e;
            --text-secondary: #636366;
            --border-color: #e5e5e5;
            --accent-primary: #4A6CFF;
            --accent-primary-rgb: 74, 108, 255;
            --accent-success: #34c759;
            --accent-error: #ff3b30;
            --shadow-color: rgba(0, 0, 0, 0.05);
        }
        html[data-theme='dark'] {
            --bg-primary: #000000;
            --bg-secondary: #1c1c1e;
            --bg-tertiary: #2c2c2e;
            --bg-glow: radial-gradient(circle at 50% 0%, rgba(88, 166, 255, 0.15) 0%, rgba(88, 166, 255, 0) 50%);
            --text-primary: #ffffff;
            --text-secondary: #8e8e93;
            --border-color: #3a3a3c;
            --accent-primary: #58A6FF;
            --accent-primary-rgb: 88, 166, 255;
            --accent-success: #32CD32;
            --accent-error: #ff453a;
            --shadow-color: rgba(0, 0, 0, 0.2);
        }
        /* --- Estilos Base --- */
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-secondary);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        .main-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 2rem;
            overflow: hidden;
        }
        .payment-dashboard {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            width: 100%;
            max-width: 1200px;
            height: 700px;
            max-height: 90vh;
        }
        /* --- Painel de Contexto (Esquerda) --- */
        .context-pane {
            display: flex;
            flex-direction: column;
            padding: 1rem;
            gap: 1.5rem;
        }
        .header {
            animation: fade-in-down 0.8s var(--ease-out-expo);
            padding: 1rem;
        }
        .header-top {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }
        .header .logo { font-weight: 700; font-size: 2rem; color: var(--text-primary); cursor: pointer;}
        .header .logo span { color: var(--accent-primary); }
        .header .title { font-size: 1.25rem; margin-top: 0.5rem; }
        .header-actions { display: flex; gap: 0.5rem; }
        .action-btn {
            background-color: var(--bg-tertiary);
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            width: 40px; height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex; align-items: center; justify-content: center;
            transition: all 0.2s ease;
        }
        .action-btn:hover { background-color: var(--bg-secondary); color: var(--accent-primary); }
        .action-btn.copied { color: var(--accent-success); border-color: var(--accent-success); }
        
        .progress-container {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            animation: zoom-in 0.8s var(--ease-out-expo);
            position: relative;
        }
        .progress-ring { transform: rotate(-90deg); }
        .progress-ring circle { transition: stroke-dashoffset 1s var(--ease-out-expo), stroke 0.5s; }
        .progress-ring-bg { stroke: var(--border-color); opacity: 0.5; }
        .progress-ring-fg { stroke: var(--accent-primary); }
        .progress-info {
            position: absolute;
            text-align: center;
            pointer-events: none;
        }
        .progress-info .label { text-transform: uppercase; font-size: 0.8rem; letter-spacing: 1px; }
        .progress-info .paid-value { font-size: 2.5rem; font-weight: 700; color: var(--text-primary); margin: 0.25rem 0; }
        .progress-info .total-value { font-size: 1rem; }
        
        .payers-list-container {
            padding: 1rem;
            animation: fade-in-up 0.8s var(--ease-out-expo) 0.2s;
            animation-fill-mode: both;
        }
        .payers-list-container h3 {
            font-size: 1rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 1rem;
        }
        .payers-list {
            max-height: 150px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            padding-right: 0.5rem;
        }
        .payers-list::-webkit-scrollbar { width: 4px; }
        .payers-list::-webkit-scrollbar-track { background: transparent; }
        .payers-list::-webkit-scrollbar-thumb { background: var(--border-color); border-radius: 4px; }
        .payer-item {
            display: flex; align-items: center; justify-content: space-between;
            background-color: var(--bg-secondary); padding: 0.75rem 1rem;
            border-radius: 8px; border: 1px solid var(--border-color);
            animation: slide-in-item 0.5s var(--ease-out-expo);
        }
        @keyframes slide-in-item {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
        }
        .payer-info { display: flex; align-items: center; gap: 0.75rem; }
        .payer-avatar {
            width: 32px; height: 32px; border-radius: 50%;
            background-color: var(--bg-tertiary);
            display: flex; justify-content: center; align-items: center;
            font-weight: 600; color: var(--accent-primary); font-size: 0.9rem;
        }
        .payer-name { font-weight: 500; color: var(--text-primary); }
        .payer-value { font-weight: 600; color: var(--accent-success); }
        .empty-payers { padding: 1rem; text-align: center; }

        /* --- Painel de Ação (Direita) --- */
        .action-pane {
            background-color: var(--bg-secondary);
            border-radius: 24px; border: 1px solid var(--border-color);
            padding: 2.5rem; position: relative; overflow: hidden;
            box-shadow: 0 10px 40px var(--shadow-color);
            animation: fade-in-right 1s var(--ease-out-expo);
            display: flex; flex-direction: column; justify-content: center;
        }
        .action-pane::before {
            content: ''; position: absolute; top: 0; left: 0; right: 0; height: 300px;
            background: var(--bg-glow); pointer-events: none;
        }
        .action-content { position: relative; z-index: 1; width: 100%; }
        .form-wrapper, .qr-wrapper, .paid-message-wrapper { transition: opacity 0.4s ease, transform 0.4s ease; }
        .action-pane:not(.qr-visible):not(.paid-visible) .qr-wrapper,
        .action-pane:not(.qr-visible):not(.paid-visible) .paid-message-wrapper,
        .action-pane.qr-visible .form-wrapper,
        .action-pane.qr-visible .paid-message-wrapper,
        .action-pane.paid-visible .form-wrapper,
        .action-pane.paid-visible .qr-wrapper {
            opacity: 0; transform: scale(0.95); pointer-events: none; position: absolute;
        }
        .qr-wrapper, .paid-message-wrapper {
            opacity: 0; pointer-events: none; text-align: center;
            position: absolute; top: 50%; left: 2.5rem; right: 2.5rem;
            transform: translateY(-50%) scale(0.95);
        }
        .action-pane.qr-visible .qr-wrapper,
        .action-pane.paid-visible .paid-message-wrapper {
            opacity: 1; transform: translateY(-50%) scale(1); pointer-events: all;
        }
        
        .action-title { font-size: 1.75rem; font-weight: 600; color: var(--text-primary); margin-bottom: 0.5rem; }
        .action-subtitle { margin-bottom: 2rem; }
        
        .form-group { margin-bottom: 1rem; }
        .form-group label { display: block; font-size: 0.9rem; margin-bottom: 0.5rem; font-weight: 500; }
        input[type="text"] {
            width: 100%; padding: 0.9rem; font-size: 1rem;
            font-family: 'Inter', sans-serif; color: var(--text-primary);
            background: var(--bg-primary); border: 1px solid var(--border-color);
            border-radius: 8px; transition: all 0.2s ease;
        }
        input[type="text"]:focus {
            outline: none; border-color: var(--accent-primary);
            box-shadow: 0 0 0 3px rgba(var(--accent-primary-rgb), 0.2);
        }
        .terms-consent {
            display: flex; align-items: flex-start; gap: 0.75rem;
            margin-top: 1.5rem; padding: 0.75rem;
            background-color: var(--bg-tertiary); border-radius: 8px;
        }
        .terms-consent input { margin-top: 3px; accent-color: var(--accent-primary); }
        .terms-consent label { font-size: 0.8rem; line-height: 1.4; }
        .terms-link { color: var(--accent-primary); text-decoration: underline; cursor: pointer; }
        .btn {
            background: var(--accent-primary); color: white;
            font-size: 1rem; font-weight: 600; padding: 1rem;
            width: 100%; border: none; border-radius: 8px; cursor: pointer;
            display: flex; align-items: center; justify-content: center;
            gap: 0.75rem; margin-top: 1rem;
            transition: all 0.3s var(--ease-out-expo);
        }
        .btn:hover { transform: translateY(-2px); box-shadow: 0 8px 20px rgba(var(--accent-primary-rgb), 0.2); }
        .btn:disabled { background: var(--text-secondary); cursor: not-allowed; transform: none; box-shadow: none; }
        .loader { width: 18px; height: 18px; border: 2px solid rgba(255, 255, 255, 0.5); border-top-color: #fff; border-radius: 50%; animation: spin 1s linear infinite; }
        @keyframes spin { to { transform: rotate(360deg); } }
        .error-message { color: var(--accent-error); font-size: 0.9rem; margin-top: 0.5rem; min-height: 1.5rem; }

        .qr-wrapper img, .paid-message-wrapper img {
            max-width: 250px; border-radius: 16px;
            border: 1px solid var(--border-color); margin: 1.5rem auto;
        }
        .paid-message-wrapper .icon {
            font-size: 3rem; color: var(--accent-success); margin-bottom: 1rem;
        }
        .pix-key-wrapper { display: flex; background-color: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 8px; padding: 0.25rem; align-items: center; margin-top: 1.5rem; }
        .pix-key-wrapper input { flex-grow: 1; border: none; background: transparent; color: var(--text-secondary); font-size: 0.9rem; outline: none; padding: 0.5rem; }
        .copy-btn { background: var(--accent-primary); color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; cursor: pointer; font-weight: 500; transition: background-color 0.2s; }
        .copy-btn:hover { filter: brightness(1.1); }
        
        /* --- Modals --- */
        .modal {
            display: none; position: fixed; z-index: 1000;
            left: 0; top: 0; width: 100%; height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(8px);
            animation: fade-in 0.3s ease;
        }
        .modal.show { display: flex; align-items: center; justify-content: center; }
        .modal-content {
            background-color: var(--bg-secondary); border: 1px solid var(--border-color);
            margin: 20px; padding: 0; border-radius: 24px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.2);
            width: 90%; max-width: 700px; max-height: 85vh;
            display: flex; flex-direction: column; position: relative;
            animation: slideIn 0.4s var(--ease-out-expo);
        }
        .modal-header { display: flex; justify-content: space-between; align-items: center; padding: 1.5rem 2rem; border-bottom: 1px solid var(--border-color); }
        .modal-title { font-size: 1.25rem; font-weight: 600; color: var(--text-primary); }
        .close-btn { background: none; border: none; font-size: 1.5rem; color: var(--text-secondary); cursor: pointer; transition: all 0.2s; }
        .close-btn:hover { color: var(--text-primary); transform: scale(1.1); }
        .modal-body { line-height: 1.7; color: var(--text-secondary); padding: 1.5rem 2rem; overflow-y: auto; }
        .modal-body h3 { color: var(--text-primary); font-size: 1.1rem; font-weight: 600; margin-top: 1.5rem; margin-bottom: 1rem; }
        .modal-body h3:first-child { margin-top: 0; }
        .modal-body.centered { text-align: center; }
        #pageQrcodeContainer { display: flex; justify-content: center; align-items: center; margin: 20px 0; }
        #pageQrcodeContainer img { border: 1px solid var(--border-color); border-radius: 16px; }

        /* --- Animações & Responsividade --- */
        @keyframes fade-in-down { from { opacity: 0; transform: translateY(-20px); } to { opacity: 1; transform: translateY(0); } }
        @keyframes fade-in-up { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
        @keyframes fade-in-right { from { opacity: 0; transform: translateX(40px); } to { opacity: 1; transform: translateX(0); } }
        @keyframes zoom-in { from { opacity: 0; transform: scale(0.8); } to { opacity: 1; transform: scale(1); } }
        @keyframes fade-in { from { opacity: 0; } to { opacity: 1; } }
        @keyframes slideIn { from { opacity: 0; transform: translateY(-30px) scale(0.95); } to { opacity: 1; transform: translateY(0) scale(1); } }
        
        @media (max-width: 1024px) {
            .main-container { display: block; height: auto; padding: 1rem; overflow: auto; }
            .payment-dashboard { grid-template-columns: 1fr; height: auto; max-height: none; gap: 1rem; }
            .context-pane { order: 1; }
            .action-pane { order: 2; min-height: 600px; }
            .action-pane.qr-visible .form-wrapper, .action-pane.paid-visible .form-wrapper { display: none; }
            .action-pane.qr-visible .qr-wrapper, .action-pane.paid-visible .paid-message-wrapper { position: static; transform: none; padding-top: 2rem; }
        }
    </style>
</head>
<body>
    <div class="main-container">
        <div class="payment-dashboard">
            <div class="context-pane">
                <header class="header">
                    <div class="header-top">
                        <div class="logo" onclick="window.location.href='/'">pag<span>junto</span></div>
                        <div class="header-actions">
                            <button class="action-btn" id="copyLinkBtn" title="Copiar link da cobrança"><i class="fas fa-link"></i></button>
                            <button class="action-btn" id="showQrBtn" title="Mostrar QR Code do link"><i class="fas fa-qrcode"></i></button>
                        </div>
                    </div>
                    <h1 class="title">Cobrança para <%= partnerData.partnerName %></h1>
                </header>

                <div class="progress-container">
                    <svg class="progress-ring" width="250" height="250" viewBox="0 0 120 120">
                        <circle class="progress-ring-bg" stroke-width="8" fill="transparent" r="52" cx="60" cy="60"/>
                        <circle id="progressRing" class="progress-ring-fg" stroke-width="8" stroke-linecap="round" fill="transparent" r="52" cx="60" cy="60"/>
                    </svg>
                    <div class="progress-info">
                        <div class="label">Arrecadado</div>
                        <div id="paidValueSpan" class="paid-value">R$ 0,00</div>
                        <div id="totalValueSpan" class="total-value">de R$ 0,00</div>
                    </div>
                </div>

                <div class="payers-list-container">
                    <h3>Quem já pagou (<span id="payersCount">0</span>)</h3>
                    <div class="payers-list" id="payersList">
                        <% if (!orderData.payersNames || orderData.payersNames.length === 0) { %>
                            <div class="empty-payers">Nenhum pagamento recebido ainda.</div>
                        <% } %>
                    </div>
                </div>
            </div>

            <div class="action-pane" id="actionPane">
                <div class="action-content">
                    <% if (orderData.paidValue >= orderData.totalValue) { %>
                        <div class="paid-message-wrapper" style="opacity: 1; pointer-events: all; transform: translateY(-50%) scale(1);">
                            <div class="icon"><i class="fas fa-check-circle"></i></div>
                            <h2 class="action-title">Cobrança Finalizada</h2>
                            <p class="action-subtitle">Este pagamento já foi totalmente concluído. Obrigado!</p>
                        </div>
                    <% } else { %>
                        <div class="form-wrapper">
                            <h2 class="action-title">Sua vez de contribuir</h2>
                            <p class="action-subtitle">Preencha os dados para gerar o seu QR Code Pix.</p>
                            <form id="paymentForm" novalidate>
                                <div class="form-group">
                                    <label for="name">Nome completo</label>
                                    <input type="text" id="name" required />
                                </div>
                                <div class="form-group">
                                    <label for="cpf">CPF (para identificação)</label>
                                    <input type="text" id="cpf" required />
                                </div>
                                 <div class="form-group">
                                    <label for="phone">Telefone (com DDD)</label>
                                    <input type="text" id="phone" required />
                                </div>
                                <div class="form-group">
                                    <label for="valor">Valor (R$)</label>
                                    <input type="text" id="valor" inputmode="decimal" required />
                                </div>
                                <div class="terms-consent">
                                    <input type="checkbox" id="termsCheckbox" required />
                                    <label for="termsCheckbox">Concordo com os <span class="terms-link" id="openTermsModal">Termos de Uso</span>.</label>
                                </div>
                                <div id="errorMessage" class="error-message"></div>
                                <button type="submit" id="generateBtn" class="btn">
                                    <span id="btnText">Gerar QR Code</span>
                                    <div id="loader" class="loader" style="display: none;"></div>
                                </button>
                            </form>
                        </div>
                        <div class="qr-wrapper" id="qrWrapper"></div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
    
    <div id="termsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Termos e Condições de Uso</h2>
                <button class="close-btn">&times;</button>
            </div>
            <div class="modal-body">
                <p><strong>Última atualização:</strong> 16 de julho de 2025</p>
                <h3>1. Objeto do Serviço</h3>
                <p>A Pagjunto atua como uma <strong>plataforma de intermediação de pagamentos</strong>, facilitando a transferência de valores entre você, o pagador, e o comerciante ou organizador da cobrança ("Parceiro"). Nós <strong>NÃO</strong> somos o vendedor do produto ou serviço. Nossa responsabilidade se limita a processar o seu pagamento de forma segura.</p>
                <h3>2. Coleta e Uso de Dados Pessoais</h3>
                <p>Ao prosseguir, você autoriza a Pagjunto a coletar e processar seus dados pessoais (nome, CPF, telefone) para a finalidade estrita de processar a transação, garantir a segurança e identificar seu pagamento junto ao Parceiro.</p>
                <h3>3. Política de Não Reembolso e Disputas</h3>
                <p>Uma vez que um pagamento é confirmado, a transação é <strong>final e irrevogável</strong> pela Pagjunto. Quaisquer solicitações de reembolso ou disputas sobre o produto/serviço devem ser tratadas <strong>DIRETAMENTE</strong> com o Parceiro que originou a cobrança.</p>
            </div>
        </div>
    </div>
    <div id="pageQrModal" class="modal">
        <div class="modal-content" style="max-width: 450px;">
            <div class="modal-header">
                <h2 class="modal-title">Compartilhar Link da Cobrança</h2>
                <button class="close-btn">&times;</button>
            </div>
            <div class="modal-body centered">
                <p>Escaneie para abrir esta página em outro dispositivo.</p>
                <div id="pageQrcodeContainer"></div>
                <p style="margin-top: 15px; font-size: 14px; word-break: break-all;">Ou copie o link:</p>
                <div class="pix-key-wrapper" style="max-width: 400px; margin: 10px auto 0;">
                    <input type="text" readonly id="pageQrLinkText" value="" />
                    <button class="copy-btn" id="copyPageLinkBtn">Copiar</button>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function () {
        // --- Estado Global a partir dos dados do servidor ---
        const TOTAL_VALUE = <%= orderData.totalValue %>;
        let currentPaidValue = <%= orderData.paidValue %>;
        let payers = [
            <% if (orderData.payersNames && orderData.payersNames.length > 0) { %>
                <% for (let i = 0; i < orderData.payersNames.length; i++) { %>
                    { name: '<%= orderData.payersNames[i] %>', value: <%= orderData.payersValues[i] %> }
                    <%= i < orderData.payersNames.length - 1 ? ',' : '' %>
                <% } %>
            <% } %>
        ];

        // --- Seletores de Elementos ---
        const progressRing = document.getElementById('progressRing');
        const paidValueSpan = document.getElementById('paidValueSpan');
        const totalValueSpan = document.getElementById('totalValueSpan');
        const payersList = document.getElementById('payersList');
        const payersCount = document.getElementById('payersCount');
        const actionPane = document.getElementById('actionPane');
        
        // --- Funções de UI ---
        const updateProgress = (paid, total) => {
            const percentage = total > 0 ? (paid / total) * 100 : 0;
            const radius = progressRing.r.baseVal.value;
            const circumference = 2 * Math.PI * radius;
            progressRing.style.strokeDasharray = `${circumference} ${circumference}`;
            progressRing.style.strokeDashoffset = circumference - (percentage / 100) * circumference;
            paidValueSpan.textContent = `R$ ${paid.toFixed(2).replace('.', ',')}`;
            totalValueSpan.textContent = `de R$ ${total.toFixed(2).replace('.', ',')}`;
            if (paid >= total) {
                progressRing.style.stroke = 'var(--accent-success)';
                actionPane.classList.add('paid-visible');
            }
        };

        const addPayerToList = (payer, animate = true) => {
            document.querySelector('.empty-payers')?.remove();
            const item = document.createElement('div');
            item.className = 'payer-item';
            if (!animate) item.style.animation = 'none';
            item.innerHTML = `
                <div class="payer-info">
                    <div class="payer-avatar">${payer.name.charAt(0).toUpperCase()}</div>
                    <span class="payer-name">${payer.name}</span>
                </div>
                <span class="payer-value">R$ ${payer.value.toFixed(2).replace('.', ',')}</span>
            `;
            payersList.appendChild(item);
            item.scrollIntoView({ behavior: 'smooth', block: 'end' });
        };
        
        const renderInitialPayers = () => {
            payers.forEach(p => addPayerToList(p, false));
            payersCount.textContent = payers.length;
        };
        
        // --- Lógica do Formulário e Pagamento ---
        const paymentForm = document.getElementById('paymentForm');
        if (paymentForm) {
            const nameInput = document.getElementById('name');
            const cpfInput = document.getElementById('cpf');
            const phoneInput = document.getElementById('phone');
            const valueInput = document.getElementById('valor');
            const termsCheckbox = document.getElementById('termsCheckbox');
            const generateBtn = document.getElementById('generateBtn');
            const btnText = document.getElementById('btnText');
            const loader = document.getElementById('loader');
            const errorMessage = document.getElementById('errorMessage');

            // Máscaras de input
            cpfInput.addEventListener('input', e => { let v = e.target.value.replace(/\D/g, '').slice(0, 11); v = v.replace(/(\d{3})(\d)/, '$1.$2').replace(/(\d{3})(\d)/, '$1.$2').replace(/(\d{3})(\d{1,2})$/, '$1-$2'); e.target.value = v; });
            phoneInput.addEventListener('input', e => { let v = e.target.value.replace(/\D/g, '').slice(0, 11); if (v.length > 10) v = v.replace(/^(\d{2})(\d{5})(\d{4}).*/, '($1) $2-$3'); else if (v.length > 5) v = v.replace(/^(\d{2})(\d{4})(\d{0,4}).*/, '($1) $2-$3'); else if (v.length > 2) v = v.replace(/^(\d{2})(\d{0,5}).*/, '($1) $2'); else v = v.replace(/^(\d*)/, '($1'); e.target.value = v; });

            paymentForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                errorMessage.textContent = '';
                const remainingValue = TOTAL_VALUE - currentPaidValue;
                const valorFloat = parseFloat(valueInput.value.replace(',', '.'));
                // Validações
                if (!nameInput.value.trim() || nameInput.value.trim().split(' ').length < 2) return errorMessage.textContent = "Informe seu nome completo.";
                if (cpfInput.value.length !== 14) return errorMessage.textContent = "Informe um CPF válido.";
                if (phoneInput.value.replace(/\D/g, '').length < 10) return errorMessage.textContent = "Informe um telefone válido com DDD.";
                if (isNaN(valorFloat) || valorFloat <= 0) return errorMessage.textContent = "Insira um valor de pagamento válido.";
                if (valorFloat > remainingValue + 0.001) return errorMessage.textContent = `O valor excede o restante (R$ ${remainingValue.toFixed(2).replace('.',',')}).`;
                if (!termsCheckbox.checked) return errorMessage.textContent = "Você deve concordar com os Termos de Uso.";
                
                generateBtn.disabled = true;
                btnText.textContent = '';
                loader.style.display = 'block';

                try {
                    const id2 = window.location.pathname.split('/').filter(Boolean).pop();
                    const rawPhone = phoneInput.value.replace(/\D/g, '');
                    const response = await fetch(`<%=process.env.API_SITE_URL%>/payment/create-pix`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            name: nameInput.value.trim(),
                            cpf: cpfInput.value.replace(/\D/g, ''),
                            phone: { country_code: '55', area_code: rawPhone.substring(0, 2), number: rawPhone.substring(2) },
                            amount: Math.round(valorFloat * 100),
                            recipient_id: "<%=partnerData.recipient_id%>",
                            orderId: id2
                        })
                    });
                    const data = await response.json();
                    if (!response.ok) throw new Error(data.error || 'Erro ao gerar QR Code.');
                    displayQrCode(data.data.last_transaction.qr_code_url, data.data.last_transaction.qr_code);
                } catch (error) {
                    errorMessage.textContent = `Erro: ${error.message}`;
                    generateBtn.disabled = false;
                } finally {
                    btnText.textContent = 'Gerar QR Code';
                    loader.style.display = 'none';
                }
            });
        }
        
        const displayQrCode = (qrUrl, pixKey) => {
            const qrWrapper = document.getElementById('qrWrapper');
            qrWrapper.innerHTML = `
                <h2 class="action-title">Escaneie para pagar</h2>
                <p class="action-subtitle">Use o app do seu banco para ler o QR Code.</p>
                <img src="${qrUrl}" alt="QR Code Pix" />
                <div class="pix-key-wrapper">
                    <input type="text" readonly value="${pixKey}" />
                    <button class="copy-btn" id="qrCopyBtn">Copiar</button>
                </div>
            `;
            actionPane.classList.add('qr-visible');
            document.getElementById('qrCopyBtn').addEventListener('click', (e) => {
                navigator.clipboard.writeText(pixKey).then(() => {
                    e.target.textContent = 'Copiado!';
                    setTimeout(() => { e.target.textContent = 'Copiar'; }, 2000);
                });
            });
        };

        // --- Lógica de Modais e Ações ---
        const setupModals = () => {
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                modal.addEventListener('click', e => {
                    if (e.target === modal || e.target.classList.contains('close-btn')) {
                        modal.classList.remove('show');
                    }
                });
            });
            document.getElementById('openTermsModal')?.addEventListener('click', e => { e.preventDefault(); document.getElementById('termsModal').classList.add('show'); });
            document.getElementById('showQrBtn')?.addEventListener('click', () => {
                const modal = document.getElementById('pageQrModal');
                const container = document.getElementById('pageQrcodeContainer');
                const linkInput = document.getElementById('pageQrLinkText');
                container.innerHTML = '';
                new QRCode(container, { text: window.location.href, width: 256, height: 256 });
                linkInput.value = window.location.href;
                modal.classList.add('show');
            });
            document.getElementById('copyPageLinkBtn')?.addEventListener('click', (e) => {
                navigator.clipboard.writeText(document.getElementById('pageQrLinkText').value).then(() => {
                    e.target.textContent = 'Copiado!';
                    setTimeout(() => { e.target.textContent = 'Copiar'; }, 2000);
                });
            });
            document.getElementById('copyLinkBtn')?.addEventListener('click', (e) => {
                navigator.clipboard.writeText(window.location.href).then(() => {
                    e.currentTarget.innerHTML = '<i class="fas fa-check"></i>';
                    e.currentTarget.classList.add('copied');
                    setTimeout(() => { e.currentTarget.innerHTML = '<i class="fas fa-link"></i>'; e.currentTarget.classList.remove('copied'); }, 2000);
                });
            });
        };
        
        // --- Socket.IO ---
        const initializeSocket = () => {
            try {
                const id2 = window.location.pathname.split('/').filter(Boolean).pop();
                const socket = io("<%=process.env.API_SITE_URL_BASE%>", { transports: ['websocket', 'polling'] });
                socket.on('connect', () => socket.emit('joinRoom', id2));
                socket.on('paymentConfirmed', data => {
                    confetti({ particleCount: 150, spread: 90, origin: { y: 0.6 } });
                    currentPaidValue = data.totalPaidValue;
                    addPayerToList({ name: data.payerName, value: data.paidValue });
                    payersCount.textContent = parseInt(payersCount.textContent) + 1;
                    updateProgress(currentPaidValue, TOTAL_VALUE);
                });
            } catch (error) { console.error("Erro ao inicializar Socket.IO:", error); }
        };

        // --- Inicialização da Página ---
        updateProgress(currentPaidValue, TOTAL_VALUE);
        renderInitialPayers();
        setupModals();
        initializeSocket();
    });
    </script>
</body>
</html>