<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pagamento Seguro - Pagjunto</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <style>
        :root {
            --primary: #2563eb;
            --primary-hover: #1d4ed8;
            --primary-light: #dbeafe;
            --accent: #059669;
            --accent-light: #d1fae5;
            --accent-hover: #a7f3d0;
            --error: #dc2626;
            --bg: #f9fafb;
            --card: #ffffff;
            --text-header: #111827;
            --text-body: #374151;
            --text-muted: #6b7280;
            --border: #e5e7eb;
            --shadow: 0 8px 25px rgba(37, 99, 235, 0.08);
        }
        * {
            box-sizing: border-box;
        }
        body {
            font-family: 'Inter', sans-serif;
            margin: 0;
            background-color: var(--bg);
            color: var(--text-body);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        .container {
            max-width: 1100px;
            margin: 0 auto;
            padding: 0 20px;
        }
        header {
            background: var(--card);
            padding: 20px 0;
            border-bottom: 1px solid var(--border);
        }
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        header .logo {
            font-weight: 700;
            font-size: 24px;
            color: var(--primary);
        }
        header .logo i {
            margin-right: 8px;
        }
        header .secure-badge {
            font-size: 14px;
            color: var(--text-muted);
            display: flex;
            align-items: center;
            gap: 8px;
        }
        header .secure-badge i {
            color: var(--accent);
        }
        main {
            padding: 60px 0;
            display: flex;
            gap: 40px;
            flex-wrap: wrap;
            align-items: flex-start;
        }
        .card {
            background: var(--card);
            border-radius: 16px;
            box-shadow: var(--shadow);
            padding: 30px;
            flex: 1;
            min-width: 350px;
            transition: all 0.3s ease;
            position: relative;
            margin-top: 40px
        }
        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 30px rgba(37, 99, 235, 0.1);
        }
        .section-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 25px;
            display: flex;
            align-items: center;
            gap: 12px;
            color: var(--text-header);
        }
        .section-title i {
            color: var(--primary);
        }
        .paid-flag {
            margin-left: auto;
            background-color: var(--accent-light);
            color: var(--accent);
            padding: 5px 12px;
            border-radius: 999px;
            font-size: 13px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }
        /* --- NOVO ESTILO PARA O BOT√ÉO DE COPIAR LINK --- */
        .copy-link-btn {
            background: none;
            border: 1px solid var(--border);
            color: var(--text-muted);
            width: 36px;
            height: 36px;
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-left: auto;
            margin-right: 15px;
            transition: all 0.2s ease;
        }
        .copy-link-btn:hover {
            background: var(--bg);
            color: var(--primary);
            border-color: var(--primary-light);
        }
        .copy-link-btn.copied {
            color: var(--accent);
            border-color: var(--accent-light);
            background-color: var(--accent-light);
        }
        .copy-link-btn:disabled {
            cursor: default;
        }
        .paid-card-message {
            text-align: center;
            padding: 40px 20px;
        }
        .paid-card-message .section-title {
            justify-content: center;
            font-size: 22px;
        }
        .paid-card-message p {
            font-size: 16px;
            color: var(--text-muted);
            margin-top: -15px;
        }
        .info-group {
            margin-bottom: 20px;
        }
        .info-group label {
            display: block;
            font-weight: 500;
            color: var(--text-muted);
            font-size: 14px;
            margin-bottom: 6px;
        }
        .info-group .value {
            font-size: 22px;
            font-weight: 600;
            color: var(--text-header);
        }
        .info-group .value.primary {
            color: var(--primary);
        }
        .info-group .value.paid {
            color: var(--accent);
        }
        .progress-container {
            margin-top: 25px;
        }
        .progress-container label {
            display: block;
            font-weight: 500;
            color: var(--text-muted);
            font-size: 14px;
            margin-bottom: 8px;
        }
        .progress {
            background-color: #e5e7eb;
            height: 12px;
            border-radius: 6px;
            overflow: hidden;
        }
        .progress-fill {
            height: 100%;
            background: <%= (orderData.paidValue >= orderData.totalValue) ? 'var(--accent)' : 'var(--primary)' %>;
            width: <%= (orderData.paidValue / orderData.totalValue) * 100 %>%;
            transition: width 0.5s ease-in-out;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 8px;
            font-size: 15px;
            color: var(--text-body);
        }
        input[type="number"],
        input[type="text"] {
            width: 100%;
            padding: 14px;
            font-size: 16px;
            color: var(--text-body);
            background-color: #fff;
            border: 1px solid var(--border);
            border-radius: 10px;
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        input[type="number"]:focus,
        input[type="text"]:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px var(--primary-light);
        }
        .error-message {
            color: var(--error);
            font-size: 14px;
            margin-top: -10px;
            margin-bottom: 15px;
            height: 16px;
        }
        .btn {
            background-color: var(--primary);
            color: white;
            font-size: 16px;
            padding: 15px;
            width: 100%;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            transition: background-color 0.2s, transform 0.2s;
        }
        .btn:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
        }
        .btn:disabled {
            background-color: var(--text-muted);
            cursor: not-allowed;
            transform: none;
        }
        .loader {
            width: 18px;
            height: 18px;
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-top-color: #fff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
        .qr-container {
            text-align: center;
            margin-top: 30px;
            padding-top: 25px;
            border-top: 1px dashed var(--border);
            opacity: 0;
            transform: translateY(10px);
            transition: opacity 0.5s ease, transform 0.5s ease;
            display: none;
        }
        .qr-container.visible {
            display: block;
            opacity: 1;
            transform: translateY(0);
        }
        .qr-container img {
            max-width: 200px;
            margin-bottom: 15px;
            border-radius: 8px;
            border: 1px solid var(--border);
        }
        .pix-key-wrapper {
            display: flex;
            background-color: var(--bg);
            border: 1px solid var(--border);
            border-radius: 8px;
            padding: 4px;
            margin-top: 15px;
            align-items: center;
        }
        .pix-key-wrapper input {
            flex-grow: 1;
            border: none;
            background: transparent;
            color: var(--text-muted);
            font-size: 14px;
            outline: none;
            padding: 0 8px;
        }
        .copy-btn {
            background: var(--accent-light);
            color: var(--accent);
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            font-size: 14px;
            transition: background-color 0.2s;
        }
        .copy-btn:hover {
            background-color: var(--accent-hover);
        }
        footer {
            text-align: center;
            padding: 40px 0;
            font-size: 14px;
            color: var(--text-muted);
            border-top: 1px solid var(--border);
            margin-top: 60px;
        }
        .footer-content i {
            color: var(--accent);
            margin-right: 5px;
        }
        footer a {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
        }
        footer a:hover {
            text-decoration: underline;
        }
        @media (max-width: 900px) {
            main {
                flex-direction: column;
            }
        }
        .logo:hover{
            cursor: pointer;
        }
    </style>
</head>
<body>

    <header>
        <div class="container header-content">
            <div class="logo" onclick="window.location.href='/'"><i class="fas fa-chart-line"></i> pagjunto</div>
            <div class="secure-badge">
                <i class="fas fa-lock"></i> Pagamento Seguro
            </div>
        </div>
    </header>

    <main class="container">
        <div class="card">
            <div class="section-title">
                <i class="fas fa-file-invoice-dollar"></i>
                <span>Resumo da Cobran√ßa de <%= partnerData.partnerName %></span>
                
                <button class="copy-link-btn" id="copyLinkBtn" title="Copiar link da cobran√ßa">
                    <i class="fas fa-link"></i>
                </button>
                
                <% if (orderData.paidValue >= orderData.totalValue) { %>
                    <span class="paid-flag">
                        <i class="fas fa-check-circle"></i> PAGO
                    </span>
                <% } %>
            </div>
            
            <div class="info-group">
                <label>Valor total</label>
                <span class="value">R$ <%= orderData.totalValue.toFixed(2) %></span>
            </div>
            <div class="info-group">
                <label>Valor j√° pago</label>
                <span class="value <%= (orderData.paidValue >= orderData.totalValue) ? 'paid' : 'primary' %>">R$ <%= orderData.paidValue.toFixed(2) %></span>
            </div>
            <div class="info-group">
                <label>Pagamentos recebidos</label>
                <span class="value"><%= orderData.paymentsNumber %></span>
            </div>

            <div class="progress-container">
                <label>Progresso do Pagamento</label>
                <div class="progress">
                    <div class="progress-fill"></div>
                </div>
            </div>
        </div>

        <% if (orderData.paidValue >= orderData.totalValue) { %>
        <div class="card paid-card-message">
            <div class="section-title">
                <i class="fas fa-check-circle" style="color: var(--accent);"></i>
                Cobran√ßa Finalizada
            </div>
            <p>Este pagamento j√° foi totalmente finalizado. Obrigado!</p>
        </div>
        <% } else { %>
        <div class="card">
            <div class="section-title"><i class="fas fa-qrcode"></i> Pague com Pix</div>
            
            <form id="paymentForm" novalidate>
                <div class="form-group">
                    <label for="cpf">Seu CPF (para identifica√ß√£o)</label>
                    <input type="text" id="cpf" placeholder="000.000.000-00" required />
                </div>

                <div class="form-group">
                    <label for="valor">Valor a pagar</label>
                    <input type="number" id="valor" placeholder="Ex: 50.00" min="1" step="0.01" required />
                </div>

                <div id="errorMessage" class="error-message"></div>

                <button type="submit" id="generateBtn" class="btn">
                    <span id="btnText">Gerar QR Code Pix</span>
                    <div id="loader" class="loader" style="display: none;"></div>
                </button>
            </form>

            <div class="qr-container" id="qrBox">
                <p><strong>Tudo pronto!</strong> Escaneie o c√≥digo abaixo:</p>
                <img src="https://api.qrserver.com/v1/create-qr-code/?data=chavepixficticia123&size=200x200&qzone=1" alt="QR Code Pix" />
                <p>Ou copie a chave Pix:</p>
                <div class="pix-key-wrapper">
                    <input type="text" readonly id="pixKey" value="00020126580014br.gov.bcb.pix0136123e4567-e89b-12d3-a456-42661417400053039865802BR5913NOME COMPLETO6009SAO PAULO62070503***6304ABCD" />
                    <button class="copy-btn" id="copyBtn">Copiar</button>
                </div>
            </div>
        </div>
        <% } %>
    </main>

    <footer>
        <div class="container footer-content">
            <p><i class="fas fa-shield-alt"></i>Conex√£o Segura. ¬© 2025 Pagjunto ‚Äî D√∫vidas? <a href="mailto:suporte@pagjunto.com">suporte@pagjunto.com</a></p>
        </div>
    </footer>

    <script>
        // --- NOVO SCRIPT PARA O BOT√ÉO DE COPIAR LINK ---
        const copyLinkBtn = document.getElementById('copyLinkBtn');
        if (copyLinkBtn) {
            copyLinkBtn.addEventListener('click', () => {
                navigator.clipboard.writeText(window.location.href).then(() => {
                    // Sucesso
                    const originalIcon = copyLinkBtn.innerHTML;
                    copyLinkBtn.innerHTML = '<i class="fas fa-check"></i>';
                    copyLinkBtn.classList.add('copied');
                    copyLinkBtn.disabled = true;

                    setTimeout(() => {
                        copyLinkBtn.innerHTML = originalIcon;
                        copyLinkBtn.classList.remove('copied');
                        copyLinkBtn.disabled = false;
                    }, 2000);
                }).catch(err => {
                    console.error('Falha ao copiar o link: ', err);
                    alert('N√£o foi poss√≠vel copiar o link.');
                });
            });
        }


        // Verifica se o formul√°rio de pagamento existe na p√°gina antes de adicionar os listeners
        if (document.getElementById('paymentForm')) {
            const paymentForm = document.getElementById('paymentForm');
            const cpfInput = document.getElementById('cpf');
            const valueInput = document.getElementById('valor');
            const generateBtn = document.getElementById('generateBtn');
            const btnText = document.getElementById('btnText');
            const loader = document.getElementById('loader');
            const qrBox = document.getElementById('qrBox');
            const errorMessage = document.getElementById('errorMessage');
            const copyBtn = document.getElementById('copyBtn');
            const pixKeyInput = document.getElementById('pixKey');

            function getLastIdsFromCurrentUrl() {
                const parts = window.location.href.split("/").filter(Boolean);
                const id1 = parts[parts.length - 2];
                const id2 = parts[parts.length - 1];
                return { id1, id2 };
            }

            const { id1, id2 } = getLastIdsFromCurrentUrl();

            cpfInput.addEventListener('input', (e) => {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length > 11) value = value.slice(0, 11);
                value = value.replace(/(\d{3})(\d)/, '$1.$2');
                value = value.replace(/(\d{3})(\d)/, '$1.$2');
                value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
                e.target.value = value;
            });

            paymentForm.addEventListener('submit', (e) => {
                e.preventDefault();
                gerarPix();
            });

            function mostrarErro(mensagem) {
                errorMessage.textContent = mensagem;
            }

            function limparEstado() {
                mostrarErro('');
                qrBox.classList.remove('visible');
                generateBtn.disabled = false;
                loader.style.display = 'none';
                btnText.style.display = 'inline';
            }

            let pollingInterval;
            let tentativas = 0;

            function iniciarPolling(chargeId) {
                pollingInterval = setInterval(async () => {
                    tentativas++;
                    if (tentativas > 30) clearInterval(pollingInterval); // Limite: 5 minutos

                    try {
                        const response = await fetch(`http://localhost:3000/payment/status/${chargeId}/${id2}/${cpfInput.value}/${valueInput.value}`);
                        const data = await response.json();

                        if (data.status === 'paid') {
                            clearInterval(pollingInterval);
                            document.querySelector('.card:last-of-type').innerHTML = `
                                <div class="paid-card-message">
                                    <div class="section-title">
                                        <i class="fas fa-check-circle" style="color: var(--accent);"></i>
                                        Pagamento Recebido!
                                    </div>
                                    <p>A p√°gina ser√° atualizada em alguns segundos.</p>
                                </div>`;

                            setTimeout(() => {
                                window.location.reload();
                            }, 5000);
                        }
                    } catch (err) {
                        console.error('Erro no polling:', err);
                    }
                }, 10000); // a cada 10 segundos
            }

            async function gerarPix() {
                limparEstado();

                const valor = parseFloat(valueInput.value);
                const cpf = cpfInput.value;
                const totalValue = <%= orderData.totalValue %>;
                const paidValue = <%= orderData.paidValue %>;
                const restante = totalValue - paidValue;

                if (cpf.length !== 14) {
                    mostrarErro("Por favor, informe um CPF v√°lido.");
                    cpfInput.focus();
                    return;
                }

                if (!valor || valor <= 0) {
                    mostrarErro("Por favor, insira um valor de pagamento v√°lido.");
                    valueInput.focus();
                    return;
                }

                if (valor > restante) {
                    mostrarErro(`O valor excede o restante da cobran√ßa (R$ ${restante.toFixed(2)}).`);
                    valueInput.focus();
                    return;
                }
                
                generateBtn.disabled = true;
                btnText.style.display = 'none';
                loader.style.display = 'block';

                try {
                    var recipient_id = "<%=partnerData.recipient_id%>"
                    const response = await fetch('http://localhost:3000/payment/create-pix', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            cpf: cpf.replace(/\D/g, ''),
                            amount: valor,
                            recipient_id: recipient_id
                        })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.error || 'Erro ao criar pagamento Pix.');
                    } else {
                        iniciarPolling(data.data.id)
                    }
                    
                    document.querySelector('#qrBox img').src = data.data.last_transaction.qr_code_url;
                    pixKeyInput.value = data.data.last_transaction.qr_code;

                    qrBox.classList.add('visible');
                    qrBox.scrollIntoView({ behavior: 'smooth', block: 'center' });

                } catch (error) {
                    console.error(error);
                    mostrarErro("Erro ao gerar o Pix. Tente novamente.");
                } finally {
                    generateBtn.disabled = false;
                    btnText.style.display = 'inline';
                    loader.style.display = 'none';
                }
            }
            
            copyBtn.addEventListener('click', () => {
                navigator.clipboard.writeText(pixKeyInput.value).then(() => {
                    copyBtn.textContent = 'Copiado!';
                    setTimeout(() => {
                        copyBtn.textContent = 'Copiar';
                    }, 2000);
                }).catch(err => {
                    console.error('Falha ao copiar texto: ', err);
                });
            });
        }
    </script>

</body>
</html>