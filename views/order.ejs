<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-AR-SA" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pagamento Seguro - Pagjunto</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="manifest" href="/site.webmanifest">
    <style>
        :root {
            --primary: #2563eb;
            --primary-hover: #1d4ed8;
            --primary-light: #dbeafe;
            --accent: #059669; /* Verde para sucesso */
            --accent-light: #d1fae5;
            --accent-hover: #a7f3d0;
            --error: #dc2626;
            --bg-primary: #ffffff;
            --bg-secondary: #f8fafc;
            --text-header: #0f172a;
            --text-body: #374151;
            --text-muted: #6b7280;
            --border: #e2e8f0;
            --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.04);
            --shadow-md: 0 4px 16px rgba(0, 0, 0, 0.08);
            --shadow-lg: 0 8px 32px rgba(37, 99, 235, 0.12);
            --radius: 12px;
            --radius-lg: 20px;
            --gradient-primary: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
            --gradient-accent: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
            --gradient-card: linear-gradient(145deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 250, 252, 0.9) 100%);
        }
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        html {
            scroll-behavior: smooth;
        }
        body {
            font-family: 'Inter', sans-serif;
            background: var(--bg-secondary);
            color: var(--text-body);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            position: relative;
            overflow-x: hidden;
        }
        .bg-decoration {
            position: fixed;
            top: 0; left: 0; width: 100%; height: 100%;
            pointer-events: none;
            z-index: 0;
            opacity: 0.6;
        }
        .bg-circle {
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(135deg, rgba(37, 99, 235, 0.1), rgba(96, 165, 250, 0.05));
            animation: float 20s ease-in-out infinite;
        }
        .bg-circle:nth-child(1) { width: 300px; height: 300px; top: 10%; left: -150px; }
        .bg-circle:nth-child(2) { width: 200px; height: 200px; top: 60%; right: -100px; animation-delay: -7s; }
        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-30px) rotate(180deg); }
        }
        .container {
            max-width: 1100px;
            margin: 0 auto;
            padding: 0 24px;
            position: relative;
            z-index: 1;
        }
        header {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            padding: 20px 0;
            border-bottom: 1px solid var(--border);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        header .logo {
            font-weight: 700;
            font-size: 24px;
            background: var(--gradient-accent);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            cursor: pointer;
            transition: opacity 0.2s;
        }
        header .logo:hover {
            opacity: 0.8;
        }
        header .secure-badge {
            font-size: 14px;
            color: var(--text-muted);
            display: flex;
            align-items: center;
            gap: 8px;
        }
        header .secure-badge i {
            color: var(--accent);
        }
        main {
            padding: 60px 0;
            display: flex;
            gap: 40px;
            flex-wrap: wrap;
            align-items: flex-start;
        }
        .card {
            margin-top: 50px;
            background: var(--bg-primary);
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-md);
            border: 1px solid var(--border);
            padding: 30px 35px;
            flex: 1;
            min-width: 350px;
            transition: all 0.3s ease;
            position: relative;
        }
        .card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }
        .section-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 25px;
            display: flex;
            align-items: center;
            gap: 12px;
            color: var(--text-header);
        }
        .section-title i {
            color: var(--primary);
        }
        .paid-flag {
            margin-left: auto;
            background-color: var(--accent-light);
            color: var(--accent);
            padding: 5px 12px;
            border-radius: 999px;
            font-size: 13px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }
        .copy-link-btn {
            background: var(--bg-secondary);
            border: 1px solid var(--border);
            color: var(--text-muted);
            width: 36px;
            height: 36px;
            border-radius: var(--radius);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }
        .card-header-actions {
            margin-left: auto;
            display: flex;
            gap: 10px;
        }
        .copy-link-btn:hover {
            background: var(--bg-secondary);
            color: var(--primary);
            border-color: var(--primary);
            transform: translateY(-2px);
        }
        .copy-link-btn.copied {
            color: var(--accent);
            border-color: var(--accent);
            background-color: var(--accent-light);
        }
        .copy-link-btn:disabled {
            cursor: default;
        }
        .paid-card-message {
            text-align: center;
            padding: 40px 20px;
        }
        .paid-card-message .section-title {
            justify-content: center;
            font-size: 22px;
        }
        .paid-card-message p {
            font-size: 16px;
            color: var(--text-muted);
            margin-top: -15px;
        }
        .info-group {
            margin-bottom: 20px;
        }
        .info-group label {
            display: block;
            font-weight: 500;
            color: var(--text-muted);
            font-size: 14px;
            margin-bottom: 6px;
        }
        .info-group .value {
            font-size: 22px;
            font-weight: 700;
            color: var(--text-header);
        }
        .info-group .value.primary {
            color: var(--primary);
        }
        .info-group .value.paid {
            color: var(--accent);
        }
        .progress-container {
            margin-top: 25px;
        }
        .progress-container label {
            display: block;
            font-weight: 500;
            color: var(--text-muted);
            font-size: 14px;
            margin-bottom: 8px;
        }
        .progress {
            background-color: #e2e8f0;
            height: 12px;
            border-radius: 6px;
            overflow: hidden;
        }
        .progress-fill {
            height: 100%;
            background: <%= (orderData.paidValue >= orderData.totalValue) ? 'var(--accent)' : 'var(--primary)' %>;
            width: <%= (orderData.paidValue / orderData.totalValue) * 100 %>%;
            transition: width 0.5s ease-in-out;
            border-radius: 6px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 8px;
            font-size: 15px;
            color: var(--text-body);
        }
        input[type="text"],
        input[type="number"] {
            width: 100%;
            padding: 16px;
            font-size: 1rem;
            color: var(--text-body);
            background: linear-gradient(145deg, rgba(255, 255, 255, 0.9), var(--bg-secondary));
            border: 1px solid var(--border);
            border-radius: var(--radius);
            transition: border-color 0.2s, box-shadow 0.2s, background-color 0.2s;
        }
        input[type="text"]:focus,
        input[type="number"]:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px var(--primary-light);
            background-color: var(--bg-primary);
        }
        .error-message {
            color: var(--error);
            font-size: 14px;
            margin-top: -10px;
            margin-bottom: 15px;
            height: 25px;
        }
        .btn {
            background: var(--gradient-accent);
            color: white;
            font-size: 16px;
            padding: 16px;
            width: 100%;
            border: none;
            border-radius: var(--radius);
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            margin-top: 5px;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 4px 16px rgba(37, 99, 235, 0.2);
        }
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 24px rgba(37, 99, 235, 0.3);
        }
        .btn:disabled {
            background: var(--text-muted);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        .loader {
            width: 18px;
            height: 18px;
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-top-color: #fff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .qr-container {
            text-align: center;
            margin-top: 30px;
            padding-top: 25px;
            border-top: 1px dashed var(--border);
            opacity: 0;
            transform: translateY(10px);
            transition: opacity 0.5s ease, transform 0.5s ease;
            display: none;
        }
        .qr-container.visible {
            display: block;
            opacity: 1;
            transform: translateY(0);
        }
        .qr-container img {
            max-width: 200px;
            margin: 10px auto 15px;
            border-radius: var(--radius-lg);
            border: 1px solid var(--border);
            box-shadow: var(--shadow-md);
        }
        .pix-key-wrapper {
            display: flex;
            background-color: var(--bg-secondary);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 4px;
            margin-top: 15px;
            align-items: center;
        }
        .pix-key-wrapper input {
            flex-grow: 1;
            border: none;
            background: transparent;
            color: var(--text-muted);
            font-size: 14px;
            outline: none;
            padding: 8px;
        }
        .copy-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            font-size: 14px;
            transition: background-color 0.2s, transform 0.2s;
        }
        .copy-btn:hover {
            background-color: var(--primary-hover);
            transform: scale(1.05);
        }
        footer {
            text-align: center;
            padding: 40px 0;
            font-size: 14px;
            color: var(--text-muted);
            border-top: 1px solid var(--border);
            margin-top: 60px;
        }
        .footer-content i {
            color: var(--accent);
            margin-right: 5px;
        }
        footer a {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
        }
        footer a:hover {
            text-decoration: underline;
        }
        .terms-consent {
            margin-bottom: 20px;
            padding: 12px;
            background-color: var(--primary-light);
            border-radius: var(--radius);
            border: 1px solid rgba(37, 99, 235, 0.2);
        }
        .checkbox-container {
            display: flex;
            align-items: flex-start;
            gap: 12px;
        }
        .checkbox-container input[type="checkbox"] {
            margin-top: 3px;
            width: 18px;
            height: 18px;
            accent-color: var(--primary);
            cursor: pointer;
            flex-shrink: 0;
        }
        .checkbox-label {
            font-size: 14px;
            line-height: 1.5;
            color: var(--text-body);
            cursor: pointer;
        }
        .terms-link {
            color: var(--primary);
            text-decoration: underline;
            cursor: pointer;
            font-weight: 600;
        }
        .terms-link:hover {
            color: var(--primary-hover);
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(17, 24, 39, 0.6);
            backdrop-filter: blur(4px);
            animation: fadeIn 0.3s ease;
        }
        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .modal-content {
            background-color: var(--bg-primary);
            margin: 20px;
            padding: 0;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-lg);
            width: 90%;
            max-width: 700px;
            max-height: 85vh;
            display: flex;
            flex-direction: column;
            position: relative;
            animation: slideIn 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 30px;
            border-bottom: 1px solid var(--border);
            flex-shrink: 0;
        }
        .modal-title {
            font-size: 22px;
            font-weight: 600;
            color: var(--text-header);
        }
        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            color: var(--text-muted);
            cursor: pointer;
            padding: 5px;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.2s, color 0.2s;
        }
        .close-btn:hover {
            background-color: var(--bg-secondary);
            color: var(--text-body);
        }
        .modal-body {
            line-height: 1.6;
            color: var(--text-body);
            padding: 25px 30px;
            overflow-y: auto;
        }
        .modal-body.centered { text-align: center; }
        #pageQrcodeContainer { display: flex; justify-content: center; align-items: center; }
        .modal-body h3 {
            color: var(--text-header);
            font-size: 18px;
            font-weight: 600;
            margin-top: 25px;
            margin-bottom: 15px;
        }
        .modal-body h3:first-child { margin-top: 0; }
        .modal-body p { margin-bottom: 15px; }
        .modal-body ul { margin-bottom: 15px; padding-left: 20px; }
        .modal-body li { margin-bottom: 8px; }

        @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
        @keyframes slideIn {
            from { opacity: 0; transform: translateY(-30px) scale(0.95); }
            to { opacity: 1; transform: translateY(0) scale(1); }
        }

        @media (max-width: 900px) {
            main { flex-direction: column; }
            .card {
                padding: 25px;
            }
            /* Regra para reordenar o título do card em telas menores */
            .card:not(.paid-card-message) > .section-title {
                display: flex; flex-wrap: wrap; align-items: center; gap: 10px 12px;
            }
            .card:not(.paid-card-message) > .section-title::before {
                content: ''; order: 1; flex-grow: 1;
            }
            .card:not(.paid-card-message) > .section-title > .card-header-actions,
            .card:not(.paid-card-message) > .section-title > .paid-flag {
                order: 1; margin-left: 0;
            }
            .card:not(.paid-card-message) > .section-title::after {
                content: ''; order: 2; flex-basis: 100%;
            }
            .card:not(.paid-card-message) > .section-title > .fas,
            .card:not(.paid-card-message) > .section-title > span:not(.paid-flag) {
                order: 3;
            }
            .modal-content { margin: 10px; padding: 0; }
            .modal-header, .modal-body { padding: 20px; }
        }
    </style>
</head>
<body>
    <div class="bg-decoration">
        <div class="bg-circle"></div>
        <div class="bg-circle"></div>
    </div>

    <header>
        <div class="container header-content">
            <div class="logo" onclick="window.location.href='/'">pagjunto</div>
            <div class="secure-badge">
                <i class="fas fa-lock"></i> Pagamento Seguro
            </div>
        </div>
    </header>

    <main class="container">
        <div class="card">
            <div class="section-title">
                <i class="fas fa-file-invoice-dollar"></i>
                <span>Cobrança de <%= partnerData.partnerName %></span>
                <div class="card-header-actions">
                    <button class="copy-link-btn" id="copyLinkBtn" title="Copiar link da cobrança">
                        <i class="fas fa-link"></i>
                    </button>
                    <button class="copy-link-btn" id="showQrBtn" title="Mostrar QR Code do link">
                        <i class="fas fa-qrcode"></i>
                    </button>
                </div>
                <% if (orderData.paidValue >= orderData.totalValue) { %>
                    <span class="paid-flag">
                        <i class="fas fa-check-circle"></i> PAGO
                    </span>
                <% } %>
            </div>
            <div class="info-group">
                <label>Valor total</label>
                <span class="value">R$ <%= orderData.totalValue.toFixed(2).replace('.', ',') %></span>
            </div>
            <div class="info-group">
                <label>Valor já pago</label>
                <span class="value <%= (orderData.paidValue >= orderData.totalValue) ? 'paid' : 'primary' %>">R$ <%= orderData.paidValue.toFixed(2).replace('.', ',') %></span>
            </div>
            <div class="info-group">
                <label>Pagamentos recebidos</label>
                <span class="value"><%= orderData.paymentsNumber %></span>
            </div>
            <div class="progress-container">
                <label>Progresso do Pagamento</label>
                <div class="progress">
                    <div class="progress-fill"></div>
                </div>
            </div>
        </div>

        <% if (orderData.paidValue >= orderData.totalValue) { %>
        <div class="card paid-card-message">
            <div class="section-title">
                <i class="fas fa-check-circle" style="color: var(--accent);"></i>
                Cobrança Finalizada
            </div>
            <p>Este pagamento já foi totalmente finalizado. Obrigado!</p>
        </div>
        <% } else { %>
        <div class="card">
            <div class="section-title"><i class="fas fa-qrcode"></i> Pague com Pix</div>
            <form id="paymentForm" novalidate>
                <div class="form-group">
                    <label for="name">Seu nome completo</label>
                    <input type="text" id="name" placeholder="Digite seu nome completo" required />
                </div>
                <div class="form-group">
                    <label for="cpf">Seu CPF (para identificação)</label>
                    <input type="text" id="cpf" placeholder="000.000.000-00" required />
                </div>
                <div class="form-group">
                    <label for="valor">Valor a pagar</label>
                    <input type="text" id="valor" placeholder="Ex: 50,00" inputmode="decimal" required />
                </div>
                <div class="terms-consent">
                    <div class="checkbox-container">
                        <input type="checkbox" id="termsCheckbox" required />
                        <label for="termsCheckbox" class="checkbox-label">
                            Concordo com os <span class="terms-link" id="openTermsModal">Termos e Condições de Uso.</span>
                        </label>
                    </div>
                </div>
                <div id="errorMessage" class="error-message"></div>
                <button type="submit" id="generateBtn" class="btn">
                    <span id="btnText">Gerar QR Code Pix</span>
                    <div id="loader" class="loader" style="display: none;"></div>
                </button>
            </form>
            <div class="qr-container" id="qrBox">
                <p><strong>Tudo pronto!</strong> Escaneie o código abaixo:</p>
                <img src="" alt="QR Code Pix" />
                <p>Ou copie a chave Pix:</p>
                <div class="pix-key-wrapper">
                    <input type="text" readonly id="pixKey" value="" />
                    <button class="copy-btn" id="copyBtn">Copiar</button>
                </div>
            </div>
        </div>
        <% } %>
    </main>

    <div id="termsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Termos e Condições de Uso</h2>
                <button class="close-btn" id="closeModal">&times;</button>
            </div>
            <div class="modal-body">
                <h3>1. Aceitação dos Termos</h3><p>Ao utilizar a plataforma Pagjunto, você concorda em ficar vinculado a estes Termos e Condições de Uso. Se você não concordar com algum destes termos, não deverá usar nossos serviços.</p><h3>2. Descrição do Serviço</h3><p>A Pagjunto é uma plataforma digital que facilita transações de pagamento através do sistema PIX, permitindo que usuários realizem e recebam pagamentos de forma segura e eficiente.</p><h3>3. Cadastro e Conta do Usuário</h3><p>Para utilizar nossos serviços, você deve:</p><ul><li>Fornecer informações verdadeiras, precisas e completas</li><li>Manter suas informações atualizadas</li><li>Ser responsável pela segurança de sua conta</li><li>Notificar-nos imediatamente sobre qualquer uso não autorizado</li></ul><h3>4. Uso Aceitável</h3><p>Você concorda em não usar a plataforma para:</p><ul><li>Atividades ilegais ou fraudulentas</li><li>Lavagem de dinheiro ou financiamento de atividades ilícitas</li><li>Violar direitos de terceiros</li><li>Transmitir vírus ou códigos maliciosos</li><li>Interferir no funcionamento da plataforma</li></ul><h3>5. Transações e Pagamentos</h3><p>Todas as transações realizadas através da plataforma são processadas através do sistema PIX do Banco Central do Brasil. A Pagjunto atua como facilitadora, mas não é responsável por disputas entre as partes envolvidas nas transações.</p><h3>6. Taxas e Comissões</h3><p>As taxas aplicáveis serão informadas claramente antes da confirmação de qualquer transação. A Pagjunto reserva-se o direito de alterar suas taxas mediante aviso prévio de 30 dias.</p><h3>7. Proteção de Dados</h3><p>Levamos a privacidade dos seus dados a sério. Todas as informações pessoais são tratadas de acordo com nossa Política de Privacidade e a Lei Geral de Proteção de Dados (LGPD).</p><h3>8. Limitação de Responsabilidade</h3><p>A Pagjunto não se responsabiliza por:</p><ul><li>Perdas indiretas ou danos consequenciais</li><li>Interrupções no serviço devido a manutenção ou falhas técnicas</li><li>Ações de terceiros que afetem nossos serviços</li><li>Decisões das instituições financeiras parceiras</li></ul><h3>9. Suspensão e Encerramento</h3><p>Reservamos o direito de suspender ou encerrar contas que violem estes termos, apresentem atividade suspeita ou por determinação legal ou regulatória.</p><h3>10. Alterações nos Termos</h3><p>Podemos modificar estes termos a qualquer momento. As alterações serão comunicadas através da plataforma e entrarão em vigor 30 dias após a notificação.</p><h3>11. Lei Aplicável</h3><p>Estes termos são regidos pelas leis brasileiras. Qualquer disputa será resolvida no foro da comarca de São Paulo, SP.</p><h3>12. Contato</h3><p>Para dúvidas sobre estes termos, entre em contato conosco através do e-mail: <strong>suporte@pagjunto.com</strong></p>
                <p><strong>Última atualização:</strong> Julho de 2025</p>
            </div>
        </div>
    </div>
    
    <div id="pageQrModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">QR Code do Link</h2>
                <button class="close-btn" id="closeQrModal">&times;</button>
            </div>
            <div class="modal-body centered">
                <div id="pageQrcodeContainer"></div>
                <p id="pageQrLinkText" style="margin-top: 15px; word-break: break-all; font-size: 13px; color: var(--text-muted);"></p>
            </div>
        </div>
    </div>

    <footer>
        <div class="container footer-content">
            <p><i class="fas fa-shield-alt"></i>Conexão Segura. © 2025 Pagjunto — Dúvidas? <a href="mailto:suporte@pagjunto.com">suporte@pagjunto.com</a></p>
        </div>
    </footer>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const copyLinkBtn = document.getElementById('copyLinkBtn');
            if (copyLinkBtn) {
                copyLinkBtn.addEventListener('click', () => {
                    navigator.clipboard.writeText(window.location.href).then(() => {
                        const originalIcon = copyLinkBtn.innerHTML;
                        copyLinkBtn.innerHTML = '<i class="fas fa-check"></i>';
                        copyLinkBtn.classList.add('copied');
                        copyLinkBtn.disabled = true;
                        setTimeout(() => {
                            copyLinkBtn.innerHTML = originalIcon;
                            copyLinkBtn.classList.remove('copied');
                            copyLinkBtn.disabled = false;
                        }, 2000);
                    }).catch(err => {
                        console.error('Falha ao copiar o link: ', err);
                        alert('Não foi possível copiar o link.');
                    });
                });
            }

            const showQrBtn = document.getElementById('showQrBtn');
            const pageQrModal = document.getElementById('pageQrModal');
            const closeQrModalBtn = document.getElementById('closeQrModal');
            const pageQrcodeContainer = document.getElementById('pageQrcodeContainer');
            const pageQrLinkText = document.getElementById('pageQrLinkText');
            if (showQrBtn) {
                showQrBtn.addEventListener('click', () => {
                    const pageUrl = window.location.href;
                    pageQrcodeContainer.innerHTML = '';
                    new QRCode(pageQrcodeContainer, {
                        text: pageUrl,
                        width: 256,
                        height: 256,
                        colorDark : "#000000",
                        colorLight : "#ffffff",
                        correctLevel : QRCode.CorrectLevel.H
                    });
                    pageQrLinkText.textContent = pageUrl;
                    pageQrModal.classList.add('show');
                    document.body.style.overflow = 'hidden';
                });
            }

            if(closeQrModalBtn) {
                closeQrModalBtn.addEventListener('click', () => {
                    pageQrModal.classList.remove('show');
                    document.body.style.overflow = 'auto';
                });
            }

            if(pageQrModal) {
                 pageQrModal.addEventListener('click', (e) => {
                    if (e.target === pageQrModal) {
                        pageQrModal.classList.remove('show');
                        document.body.style.overflow = 'auto';
                    }
                });
            }
            
            const termsModal = document.getElementById('termsModal');
            const openTermsModal = document.getElementById('openTermsModal');
            const closeModal = document.getElementById('closeModal');
            if(openTermsModal) {
                openTermsModal.addEventListener('click', (e) => {
                    e.preventDefault();
                    termsModal.classList.add('show');
                    document.body.style.overflow = 'hidden';
                });
            }
            if(closeModal) {
                closeModal.addEventListener('click', () => {
                    termsModal.classList.remove('show');
                    document.body.style.overflow = 'auto';
                });
            }
            if(termsModal) {
                termsModal.addEventListener('click', (e) => {
                    if (e.target === termsModal) {
                        termsModal.classList.remove('show');
                        document.body.style.overflow = 'auto';
                    }
                });
            }
            
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    if (termsModal && termsModal.classList.contains('show')) {
                        termsModal.classList.remove('show');
                        document.body.style.overflow = 'auto';
                    }
                    if (pageQrModal && pageQrModal.classList.contains('show')) {
                        pageQrModal.classList.remove('show');
                        document.body.style.overflow = 'auto';
                    }
                }
            });

            if (document.getElementById('paymentForm')) {
                const paymentForm = document.getElementById('paymentForm');
                const nameInput = document.getElementById('name');
                const cpfInput = document.getElementById('cpf');
                const valueInput = document.getElementById('valor');
                const generateBtn = document.getElementById('generateBtn');
                const btnText = document.getElementById('btnText');
                const loader = document.getElementById('loader');
                const qrBox = document.getElementById('qrBox');
                const errorMessage = document.getElementById('errorMessage');
                const copyBtn = document.getElementById('copyBtn');
                const pixKeyInput = document.getElementById('pixKey');
                const termsCheckbox = document.getElementById('termsCheckbox');

                function getLastIdsFromCurrentUrl() {
                    const parts = window.location.href.split("/").filter(Boolean);
                    const id1 = parts[parts.length - 2];
                    const id2 = parts[parts.length - 1];
                    return { id1, id2 };
                }
                const { id1, id2 } = getLastIdsFromCurrentUrl();

                cpfInput.addEventListener('input', (e) => {
                    let value = e.target.value.replace(/\D/g, '');
                    if (value.length > 11) value = value.slice(0, 11);
                    value = value.replace(/(\d{3})(\d)/, '$1.$2');
                    value = value.replace(/(\d{3})(\d)/, '$1.$2');
                    value = value.replace(/(\d{3})(\d{1,2})$/, '$1-$2');
                    e.target.value = value;
                });

                paymentForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    gerarPix();
                });

                function mostrarErro(mensagem) {
                    errorMessage.textContent = mensagem;
                }

                function limparEstado() {
                    mostrarErro('');
                    qrBox.classList.remove('visible');
                    generateBtn.disabled = false;
                    loader.style.display = 'none';
                    btnText.style.display = 'inline';
                }

                let pollingInterval;
                let tentativas = 0;
                function iniciarPolling(chargeId) {
                    pollingInterval = setInterval(async () => {
                        tentativas++;
                        if (tentativas > 30) clearInterval(pollingInterval);

                        try {
                            const fullName = nameInput.value.trim();
                            const firstName = fullName.split(' ')[0];
                            const valorPago = valueInput.value.replace(',', '.');
                            const response = await fetch(`https://api.pagjunto.com/payment/status/${chargeId}/${id2}/${cpfInput.value.replace(/\D/g, '')}/${valorPago}/${encodeURIComponent(firstName)}`);
                            const data = await response.json();

                            if (data.status === 'paid') {
                                clearInterval(pollingInterval);
                                document.querySelector('.card:last-of-type').innerHTML = `
                                    <div class="paid-card-message">
                                        <div class="section-title">
                                            <i class="fas fa-check-circle" style="color: var(--accent);"></i>
                                            Pagamento Recebido!
                                        </div>
                                        <p>A página será atualizada em alguns segundos.</p>
                                    </div>`;
                                setTimeout(() => {
                                    window.location.reload();
                                }, 5000);
                            }
                        } catch (err) {
                            console.error('Erro no polling:', err);
                        }
                    }, 10000);
                }

                async function gerarPix() {
                    limparEstado();
                    const fullName = nameInput.value.trim();
                    const firstName = fullName.split(' ')[0];
                    const valorString = valueInput.value.replace(',', '.');
                    const valorFloat = parseFloat(valorString);
                    const cpf = cpfInput.value;
                    
                    const totalValueInCents = Math.round(<%= orderData.totalValue %> * 100);
                    const paidValueInCents = Math.round(<%= orderData.paidValue %> * 100);
                    const valueToPayInCents = Math.round(valorFloat * 100);
                    const remainingInCents = totalValueInCents - paidValueInCents;
                    
                    if (!fullName) {
                        mostrarErro("Por favor, informe seu nome completo.");
                        nameInput.focus();
                        return;
                    }
                    if (cpf.length !== 14) {
                        mostrarErro("Por favor, informe um CPF válido.");
                        cpfInput.focus();
                        return;
                    }
                    if (isNaN(valueToPayInCents) || valueToPayInCents <= 0) {
                        mostrarErro("Por favor, insira um valor de pagamento válido.");
                        valueInput.focus();
                        return;
                    }
                    if (valueToPayInCents > remainingInCents) {
                        const restanteEmReais = (remainingInCents / 100).toFixed(2).replace('.', ',');
                        mostrarErro(`O valor excede o restante da cobrança (R$ ${restanteEmReais}).`);
                        valueInput.focus();
                        return;
                    }
                    if (!termsCheckbox.checked) {
                        mostrarErro("Você deve concordar com os Termos e Condições de Uso para continuar.");
                        termsCheckbox.focus();
                        return;
                    }
                    
                    generateBtn.disabled = true;
                    btnText.style.display = 'none';
                    loader.style.display = 'block';
                    try {
                        var recipient_id = "<%=partnerData.recipient_id%>";
                        const response = await fetch('https://api.pagjunto.com/payment/create-pix', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                name: firstName,
                                cpf: cpf.replace(/\D/g, ''),
                                amount: valueToPayInCents,
                                recipient_id: recipient_id
                            })
                        });
                        const data = await response.json();
                        if (!response.ok) {
                            throw new Error(data.error || 'Erro ao criar pagamento Pix.');
                        } else {
                            iniciarPolling(data.data.id)
                        }
                        document.querySelector('#qrBox img').src = data.data.last_transaction.qr_code_url;
                        pixKeyInput.value = data.data.last_transaction.qr_code;
                        qrBox.classList.add('visible');
                        qrBox.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    } catch (error) {
                        console.error(error);
                        mostrarErro("Erro ao gerar o Pix. Tente novamente.");
                    } finally {
                        generateBtn.disabled = false;
                        btnText.style.display = 'inline';
                        loader.style.display = 'none';
                    }
                }
                
                copyBtn.addEventListener('click', () => {
                    navigator.clipboard.writeText(pixKeyInput.value).then(() => {
                        copyBtn.textContent = 'Copiado!';
                        setTimeout(() => {
                            copyBtn.textContent = 'Copiar';
                        }, 2000);
                    }).catch(err => {
                        console.error('Falha ao copiar texto: ', err);
                    });
                });
            }
        });
    </script>
</body>
</html>